<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\Host_demo.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\Host_demo.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060300: Last Updated: Sat May 09 08:58:30 2020
<BR><P>
<H3>Maximum Stack Usage =        328 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; Max_Ser_If_Init &rArr; Max_Ser_Ctrl_Init &rArr; Max_Ser_EDID_Cfg_Init &rArr; Max_Ser_Data_UART_Write &rArr; UART_SendWait
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[41]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">NMI_Handler</a><BR>
 <LI><a href="#[7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">HardFault_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[a]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SysTick_Handler</a><BR>
 <LI><a href="#[1b]">ACMP0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">ACMP0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1b]">ACMP0_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[20]">ACMP1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1a]">ADC_IRQHandler</a> from adc.o(i.ADC_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[2e]">APP_COMM_Data_IRQHander</a> from app_comm_data.o(i.APP_COMM_Data_IRQHander) referenced from app_comm_data.o(i.APP_COMM_Data_UART_Init)
 <LI><a href="#[1c]">FTM0_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1d]">FTM1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1e]">FTM2_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[10]">FTMRE_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[13]">I2C0_IRQHandler</a> from i2c.o(i.I2C0_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[14]">I2C1_IRQHandler</a> from i2c.o(i.I2C1_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[26]">ICS_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[12]">IRQ_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[23]">KBI0_IRQHandler</a> from kbi.o(i.KBI0_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[24]">KBI1_IRQHandler</a> from kbi.o(i.KBI1_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[29]">MSCAN_RX_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[2a]">MSCAN_TX_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[2f]">Max_Ser_Data_IRQHander</a> from max_serializer_data.o(i.Max_Ser_Data_IRQHander) referenced from max_serializer_data.o(i.Max_Ser_Data_I2C_Or_Uart_Init)
 <LI><a href="#[6]">NMI_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[21]">PIT_CH0_IRQHandler</a> from pit.o(i.PIT_CH0_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[22]">PIT_CH1_IRQHandler</a> from pit.o(i.PIT_CH1_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[11]">PMC_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[28]">PWT_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[1f]">RTC_IRQHandler</a> from rtc.o(i.RTC_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[b]">Reserved16_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[c]">Reserved17_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[d]">Reserved18_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[e]">Reserved19_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[f]">Reserved20_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[25]">Reserved42_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[15]">SPI0_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[16]">SPI1_IRQHandler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[2b]">SystemInit</a> from system_skeaz1284.o(i.SystemInit) referenced from startup_skeaz1284.o(.text)
 <LI><a href="#[17]">UART0_IRQHandler</a> from uart.o(i.UART0_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[18]">UART1_IRQHandler</a> from uart.o(i.UART1_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[19]">UART2_IRQHandler</a> from uart.o(i.UART2_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[27]">WDOG_IRQHandler</a> from wdog.o(i.WDOG_IRQHandler) referenced from startup_skeaz1284.o(RESET)
 <LI><a href="#[30]">__main</a> from __main.o(!!!main) referenced from startup_skeaz1284.o(.text)
 <LI><a href="#[2c]">init_data_bss</a> from startup_skeaz1284.o(.text) referenced from startup_skeaz1284.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[30]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[31]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[33]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[66]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[67]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[34]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[68]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[38]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[69]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[6a]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[6b]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[6c]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[6d]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[6e]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[6f]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[70]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[71]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[72]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[73]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[74]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[75]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[76]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[77]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[78]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[79]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[7a]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[7b]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[7c]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[7d]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[3d]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[7e]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[7f]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[80]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[81]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[82]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[83]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[84]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[32]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[85]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[35]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[37]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[86]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[39]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Max_Ser_If_Init &rArr; Max_Ser_Ctrl_Init &rArr; Max_Ser_EDID_Cfg_Init &rArr; Max_Ser_Data_UART_Write &rArr; UART_SendWait
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[87]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[43]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[3c]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[88]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[3e]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_memcpy4</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_EDID_Cfg_Init
</UL>

<P><STRONG><a name="[89]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.emb_text), UNUSED)

<P><STRONG><a name="[2c]"></a>init_data_bss</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(.text)
</UL>
<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>ACMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>ACMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text), UNUSED)

<P><STRONG><a name="[1c]"></a>FTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>FTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>FTM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>FTMRE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>ICS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>IRQ_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>MSCAN_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>MSCAN_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>PMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>PWT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>Reserved16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>Reserved17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>Reserved18_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>Reserved19_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>Reserved20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>Reserved42_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_skeaz1284.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_skeaz1284.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[8b]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[45]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_COMM_Data_SER_Task
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_COMM_Data_IRQHander
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Data_IRQHander
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Receive_Data_Send
</UL>

<P><STRONG><a name="[8c]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[8d]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[8f]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[90]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[3b]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[91]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[40]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[92]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3f]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[93]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[94]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[95]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[1a]"></a>ADC_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, adc.o(i.ADC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>APP_COMM_Data_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, app_comm_data.o(i.APP_COMM_Data_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = APP_COMM_Data_Init &rArr; APP_COMM_Data_UART_Init &rArr; UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_COMM_Data_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_COMM_If_Init
</UL>

<P><STRONG><a name="[48]"></a>APP_COMM_Data_SER_Send</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, app_comm_data.o(i.APP_COMM_Data_SER_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = APP_COMM_Data_SER_Send &rArr; UART_SendWait
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendWait
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_COMM_Data_SER_Task
</UL>

<P><STRONG><a name="[4a]"></a>APP_COMM_Data_SER_Task</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app_comm_data.o(i.APP_COMM_Data_SER_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = APP_COMM_Data_SER_Task &rArr; APP_COMM_Data_SER_Send &rArr; UART_SendWait
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_COMM_Data_SER_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_COMM_If_Task
</UL>

<P><STRONG><a name="[4b]"></a>APP_COMM_Data_Send</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, app_comm_data.o(i.APP_COMM_Data_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = APP_COMM_Data_Send &rArr; UART_SendWait
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendWait
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_COMM_If_Data_Send
</UL>

<P><STRONG><a name="[4e]"></a>APP_COMM_If_Data_Send</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, app_comm_if.o(i.APP_COMM_If_Data_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = APP_COMM_If_Data_Send &rArr; APP_COMM_Data_Send &rArr; UART_SendWait
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_COMM_Data_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_If_Data_APP_Send
</UL>

<P><STRONG><a name="[4f]"></a>APP_COMM_If_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, app_comm_if.o(i.APP_COMM_If_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = APP_COMM_If_Init &rArr; APP_COMM_Data_Init &rArr; APP_COMM_Data_UART_Init &rArr; UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_COMM_Data_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[50]"></a>APP_COMM_If_Task</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, app_comm_if.o(i.APP_COMM_If_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = APP_COMM_If_Task &rArr; APP_COMM_Data_SER_Task &rArr; APP_COMM_Data_SER_Send &rArr; UART_SendWait
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_COMM_Data_SER_Task
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[65]"></a>Clk_Init</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, clk.o(i.Clk_Init))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>Enable_Interrupt</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, nvic.o(i.Enable_Interrupt))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[13]"></a>I2C0_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, i2c.o(i.I2C0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>I2C1_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, i2c.o(i.I2C1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>KBI0_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, kbi.o(i.KBI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KBI0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>KBI1_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, kbi.o(i.KBI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KBI1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>Max_Ser_Ctrl_APP_Data_Send</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, max_serializer_ctrl.o(i.Max_Ser_Ctrl_APP_Data_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Max_Ser_Ctrl_APP_Data_Send &rArr; Max_Ser_If_Data_APP_Send &rArr; APP_COMM_If_Data_Send &rArr; APP_COMM_Data_Send &rArr; UART_SendWait
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_If_Data_APP_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Receive_Data_Send
</UL>

<P><STRONG><a name="[54]"></a>Max_Ser_Ctrl_Init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, max_serializer_ctrl.o(i.Max_Ser_Ctrl_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = Max_Ser_Ctrl_Init &rArr; Max_Ser_EDID_Cfg_Init &rArr; Max_Ser_Data_UART_Write &rArr; UART_SendWait
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_EDID_Cfg_Init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Data_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Data_Cfg_Init_Before_Edid
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Data_Cfg_Init_After_Edid
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_If_Init
</UL>

<P><STRONG><a name="[59]"></a>Max_Ser_Ctrl_Task</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, max_serializer_ctrl.o(i.Max_Ser_Ctrl_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Max_Ser_Ctrl_Task &rArr; Max_Ser_Receive_Data_Send &rArr; Max_Ser_Ctrl_APP_Data_Send &rArr; Max_Ser_If_Data_APP_Send &rArr; APP_COMM_If_Data_Send &rArr; APP_COMM_Data_Send &rArr; UART_SendWait
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Receive_Data_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_If_Task
</UL>

<P><STRONG><a name="[2f]"></a>Max_Ser_Data_IRQHander</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, max_serializer_data.o(i.Max_Ser_Data_IRQHander))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Max_Ser_Data_IRQHander
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> max_serializer_data.o(i.Max_Ser_Data_I2C_Or_Uart_Init)
</UL>
<P><STRONG><a name="[55]"></a>Max_Ser_Data_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, max_serializer_data.o(i.Max_Ser_Data_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Max_Ser_Data_Init &rArr; Max_Ser_Data_I2C_Or_Uart_Init &rArr; UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Data_I2C_Or_Uart_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Data_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Ctrl_Init
</UL>

<P><STRONG><a name="[5c]"></a>Max_Ser_Data_UART_Read</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, max_serializer_data.o(i.Max_Ser_Data_UART_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Max_Ser_Data_UART_Read &rArr; UART_SendWait
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendWait
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Data_Cfg_Init_After_Edid
</UL>

<P><STRONG><a name="[5b]"></a>Max_Ser_Data_UART_Write</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, max_serializer_data.o(i.Max_Ser_Data_UART_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Max_Ser_Data_UART_Write &rArr; UART_SendWait
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendWait
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_EDID_Cfg_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Data_Cfg_Init_Before_Edid
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Data_Cfg_Init_After_Edid
</UL>

<P><STRONG><a name="[57]"></a>Max_Ser_EDID_Cfg_Init</STRONG> (Thumb, 114 bytes, Stack size 272 bytes, max_serializer_data.o(i.Max_Ser_EDID_Cfg_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = Max_Ser_EDID_Cfg_Init &rArr; Max_Ser_Data_UART_Write &rArr; UART_SendWait
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Data_UART_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Ctrl_Init
</UL>

<P><STRONG><a name="[53]"></a>Max_Ser_If_Data_APP_Send</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, max_serializer_if.o(i.Max_Ser_If_Data_APP_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Max_Ser_If_Data_APP_Send &rArr; APP_COMM_If_Data_Send &rArr; APP_COMM_Data_Send &rArr; UART_SendWait
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_COMM_If_Data_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Ctrl_APP_Data_Send
</UL>

<P><STRONG><a name="[60]"></a>Max_Ser_If_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, max_serializer_if.o(i.Max_Ser_If_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Max_Ser_If_Init &rArr; Max_Ser_Ctrl_Init &rArr; Max_Ser_EDID_Cfg_Init &rArr; Max_Ser_Data_UART_Write &rArr; UART_SendWait
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Ctrl_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>Max_Ser_If_Task</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, max_serializer_if.o(i.Max_Ser_If_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Max_Ser_If_Task &rArr; Max_Ser_Ctrl_Task &rArr; Max_Ser_Receive_Data_Send &rArr; Max_Ser_Ctrl_APP_Data_Send &rArr; Max_Ser_If_Data_APP_Send &rArr; APP_COMM_If_Data_Send &rArr; APP_COMM_Data_Send &rArr; UART_SendWait
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Ctrl_Task
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5a]"></a>Max_Ser_Receive_Data_Send</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, max_serializer_data.o(i.Max_Ser_Receive_Data_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Max_Ser_Receive_Data_Send &rArr; Max_Ser_Ctrl_APP_Data_Send &rArr; Max_Ser_If_Data_APP_Send &rArr; APP_COMM_If_Data_Send &rArr; APP_COMM_Data_Send &rArr; UART_SendWait
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Ctrl_APP_Data_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Ctrl_Task
</UL>

<P><STRONG><a name="[21]"></a>PIT_CH0_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, pit.o(i.PIT_CH0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PIT_CH0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT_ChannelClrFlags
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>PIT_CH1_IRQHandler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, pit.o(i.PIT_CH1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PIT_CH1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT_ChannelClrFlags
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>RTC_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rtc.o(i.RTC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClrFlags
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>SystemInit</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, system_skeaz1284.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(.text)
</UL>
<P><STRONG><a name="[17]"></a>UART0_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, uart.o(i.UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>UART1_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, uart.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>UART2_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, uart.o(i.UART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>UART_GetChar</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uart.o(i.UART_GetChar))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_COMM_Data_IRQHander
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Data_IRQHander
</UL>

<P><STRONG><a name="[4d]"></a>UART_Init</STRONG> (Thumb, 278 bytes, Stack size 32 bytes, uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enable_Interrupt
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_COMM_Data_UART_Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Data_I2C_Or_Uart_Init
</UL>

<P><STRONG><a name="[49]"></a>UART_SendWait</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, uart.o(i.UART_SendWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_SendWait
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_COMM_Data_Send
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_COMM_Data_SER_Send
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Data_UART_Write
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Data_UART_Read
</UL>

<P><STRONG><a name="[4c]"></a>UART_SetCallback</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, uart.o(i.UART_SetCallback))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_COMM_Data_UART_Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Data_I2C_Or_Uart_Init
</UL>

<P><STRONG><a name="[27]"></a>WDOG_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, wdog.o(i.WDOG_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WDOG_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_skeaz1284.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>main</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = main &rArr; Max_Ser_If_Init &rArr; Max_Ser_Ctrl_Init &rArr; Max_Ser_EDID_Cfg_Init &rArr; Max_Ser_Data_UART_Write &rArr; UART_SendWait
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_If_Task
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_If_Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_COMM_If_Task
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_COMM_If_Init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clk_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[51]"></a>I2C_ClearStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, i2c.o(i.I2C_ClearStatus))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_IRQHandler
</UL>

<P><STRONG><a name="[62]"></a>PIT_ChannelClrFlags</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, pit.o(i.PIT_ChannelClrFlags))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT_CH1_IRQHandler
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIT_CH0_IRQHandler
</UL>

<P><STRONG><a name="[63]"></a>RTC_ClrFlags</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rtc.o(i.RTC_ClrFlags))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_IRQHandler
</UL>

<P><STRONG><a name="[58]"></a>Max_Ser_Data_Cfg_Init_After_Edid</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, max_serializer_ctrl.o(i.Max_Ser_Data_Cfg_Init_After_Edid))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Max_Ser_Data_Cfg_Init_After_Edid &rArr; Max_Ser_Data_UART_Write &rArr; UART_SendWait
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Data_UART_Write
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Data_UART_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Ctrl_Init
</UL>

<P><STRONG><a name="[56]"></a>Max_Ser_Data_Cfg_Init_Before_Edid</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, max_serializer_ctrl.o(i.Max_Ser_Data_Cfg_Init_Before_Edid))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Max_Ser_Data_Cfg_Init_Before_Edid &rArr; Max_Ser_Data_UART_Write &rArr; UART_SendWait
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Data_UART_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Ctrl_Init
</UL>

<P><STRONG><a name="[5e]"></a>Max_Ser_Data_GPIO_Init</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, max_serializer_data.o(i.Max_Ser_Data_GPIO_Init))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Data_Init
</UL>

<P><STRONG><a name="[5d]"></a>Max_Ser_Data_I2C_Or_Uart_Init</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, max_serializer_data.o(i.Max_Ser_Data_I2C_Or_Uart_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Max_Ser_Data_I2C_Or_Uart_Init &rArr; UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetCallback
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Max_Ser_Data_Init
</UL>

<P><STRONG><a name="[2e]"></a>APP_COMM_Data_IRQHander</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, app_comm_data.o(i.APP_COMM_Data_IRQHander))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = APP_COMM_Data_IRQHander
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_comm_data.o(i.APP_COMM_Data_UART_Init)
</UL>
<P><STRONG><a name="[47]"></a>APP_COMM_Data_UART_Init</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, app_comm_data.o(i.APP_COMM_Data_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = APP_COMM_Data_UART_Init &rArr; UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetCallback
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_COMM_Data_Init
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[42]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
